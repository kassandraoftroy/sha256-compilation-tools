const bit ZERO = 0
const bit ONE = 1
const bit2048 K = 0,1,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,1,0,0,1,1,0,0,0,0,1,1,1,0,0,0,1,0,0,1,1,0,1,1,1,0,1,0,0,0,1,0,0,1,0,0,1,0,0,0,1,1,0,1,1,0,1,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,0,1,0,0,1,1,0,1,1,0,1,0,1,1,1,0,1,1,0,1,1,1,0,1,0,0,1,0,1,0,0,1,1,1,0,0,1,0,1,0,1,0,1,1,0,1,1,0,0,0,0,1,0,0,1,0,1,1,0,1,1,0,1,0,1,1,0,0,1,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,1,0,0,0,1,1,1,0,0,0,1,0,1,1,1,1,0,1,1,0,1,0,1,0,1,1,1,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,0,1,0,1,0,0,1,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,1,0,1,0,1,1,0,1,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,1,0,1,1,0,1,1,1,1,1,0,0,1,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,1,1,1,1,1,0,1,1,1,0,0,0,0,1,1,0,1,1,1,0,0,1,0,1,0,1,1,1,1,1,0,0,1,0,1,1,1,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,1,0,1,1,0,0,0,1,1,1,1,1,1,1,1,0,1,0,0,1,1,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,1,1,1,1,0,0,0,0,0,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,0,1,0,1,1,1,0,1,0,0,1,1,1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1,1,0,1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,0,1,0,0,0,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,1,1,1,0,1,1,1,0,0,0,1,1,0,0,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,1,0,1,0,0,0,0,1,1,1,0,0,1,1,0,0,0,0,1,0,1,1,0,1,1,1,1,0,1,0,0,1,0,0,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,1,0,0,1,0,1,0,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,1,0,0,1,0,1,1,0,0,0,0,1,0,1,0,1,0,0,1,1,1,0,1,1,1,0,0,0,1,1,1,0,1,1,0,1,1,1,1,1,0,0,1,1,0,0,0,1,0,0,0,1,1,0,1,1,0,1,0,1,0,0,1,1,0,0,0,0,0,1,1,1,1,1,0,0,1,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0,1,1,0,0,1,1,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,1,1,1,1,0,0,1,0,0,0,1,0,1,1,1,1,1,1,0,1,0,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,0,1,1,1,1,0,1,0,1,0,1,1,0,1,0,0,1,1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,1,1,0,0,0,0,0,1,1,0,1,1,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,0,0,1,1,1,1,0,1,1,0,1,1,1,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,1,0,0,1,0,1,1,1,0,0,0,0,1,1,0,1,1,0,0,1,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,1,0,1,0,0,1,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,1,0,0,1,1,0,1,1,0,0,1,0,1,0,0,0,0,1,0,1,0,0,1,1,1,0,0,1,1,0,1,0,1,0,1,0,0,0,1,1,1,0,1,1,0,0,1,1,0,1,0,1,0,0,0,0,0,1,0,1,0,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,1,1,0,0,1,0,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0,0,1,0,1,1,0,0,1,0,0,0,0,1,0,1,1,0,1,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,0,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,1,0,0,1,0,1,1,1,1,0,0,0,0,1,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,1,1,0,1,1,1,0,0,0,0,1,1,0,0,0,1,1,1,0,1,1,0,1,1,0,0,0,1,0,1,0,0,0,1,1,0,1,0,0,0,1,1,1,1,0,1,0,0,0,1,1,0,0,1,0,0,1,0,1,1,1,0,1,0,0,0,0,0,0,1,1,0,0,1,1,1,0,1,0,1,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,1,1,1,0,1,0,0,0,0,0,0,1,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,1,1,0,1,0,0,1,0,0,1,1,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,1,1,1,1,0,0,0,1,1,0,1,1,1,0,1,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,1,0,1,0,0,1,0,0,0,0,1,1,1,0,1,1,1,0,1,0,0,1,1,0,0,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,0,1,0,1,1,1,1,0,0,1,0,1,1,0,1,0,1,0,0,1,1,1,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,1,0,0,0,1,0,1,0,1,0,1,0,0,1,0,0,1,0,1,0,0,1,0,1,1,0,1,1,1,0,0,1,1,1,0,0,1,1,0,0,1,0,1,0,0,1,0,0,1,1,1,1,0,1,1,0,1,0,0,0,0,0,1,0,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,0,1,0,0,1,0,0,0,1,1,1,1,1,0,0,0,0,0,1,0,1,1,1,0,1,1,1,0,0,1,1,1,1,0,0,0,1,0,1,0,0,1,0,1,0,1,1,0,0,0,1,1,0,1,1,0,1,1,1,1,1,0,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,0,0,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,0,1,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,0,0,1,1,1,0,0,0,1,0,1,1,1,1,0,0,0,1,1,1,1,0,0,1,0
in bit512 block1
in bit512 block2
var bit256 hash = shab1(block1)
var bit32 a = hash[0:32]
var bit32 b = hash[32:64]
var bit32 c = hash[64:96]
var bit32 d = hash[96:128]
var bit32 e = hash[128:160]
var bit32 f = hash[160:192]
var bit32 g = hash[192:224]
var bit32 h = hash[224:256]
var bit32 W0 = block2[0:32]
var bit32 W1 = block2[32:64]
var bit32 W2 = block2[64:96]
var bit32 W3 = block2[96:128]
var bit32 W4 = block2[128:160]
var bit32 W5 = block2[160:192]
var bit32 W6 = block2[192:224]
var bit32 W7 = block2[224:256]
var bit32 W8 = block2[256:288]
var bit32 W9 = block2[288:320]
var bit32 W10 = block2[320:352]
var bit32 W11 = block2[352:384]
var bit32 W12 = block2[384:416]
var bit32 W13 = block2[416:448]
var bit32 W14 = block2[448:480]
var bit32 W15 = block2[480:512]
var bit32 first = lsig1(W14, ZERO)
var bit32 second = lsig0(W1, ZERO)
var bit32 third = Add(W9, W0)
var bit32 fourth = Add(first, second)
var bit32 W16 = Add(third, fourth)
var bit32 first = lsig1(W15, ZERO)
var bit32 second = lsig0(W2, ZERO)
var bit32 third = Add(W10, W1)
var bit32 fourth = Add(first, second)
var bit32 W17 = Add(third, fourth)
var bit32 first = lsig1(W16, ZERO)
var bit32 second = lsig0(W3, ZERO)
var bit32 third = Add(W11, W2)
var bit32 fourth = Add(first, second)
var bit32 W18 = Add(third, fourth)
var bit32 first = lsig1(W17, ZERO)
var bit32 second = lsig0(W4, ZERO)
var bit32 third = Add(W12, W3)
var bit32 fourth = Add(first, second)
var bit32 W19 = Add(third, fourth)
var bit32 first = lsig1(W18, ZERO)
var bit32 second = lsig0(W5, ZERO)
var bit32 third = Add(W13, W4)
var bit32 fourth = Add(first, second)
var bit32 W20 = Add(third, fourth)
var bit32 first = lsig1(W19, ZERO)
var bit32 second = lsig0(W6, ZERO)
var bit32 third = Add(W14, W5)
var bit32 fourth = Add(first, second)
var bit32 W21 = Add(third, fourth)
var bit32 first = lsig1(W20, ZERO)
var bit32 second = lsig0(W7, ZERO)
var bit32 third = Add(W15, W6)
var bit32 fourth = Add(first, second)
var bit32 W22 = Add(third, fourth)
var bit32 first = lsig1(W21, ZERO)
var bit32 second = lsig0(W8, ZERO)
var bit32 third = Add(W16, W7)
var bit32 fourth = Add(first, second)
var bit32 W23 = Add(third, fourth)
var bit32 first = lsig1(W22, ZERO)
var bit32 second = lsig0(W9, ZERO)
var bit32 third = Add(W17, W8)
var bit32 fourth = Add(first, second)
var bit32 W24 = Add(third, fourth)
var bit32 first = lsig1(W23, ZERO)
var bit32 second = lsig0(W10, ZERO)
var bit32 third = Add(W18, W9)
var bit32 fourth = Add(first, second)
var bit32 W25 = Add(third, fourth)
var bit32 first = lsig1(W24, ZERO)
var bit32 second = lsig0(W11, ZERO)
var bit32 third = Add(W19, W10)
var bit32 fourth = Add(first, second)
var bit32 W26 = Add(third, fourth)
var bit32 first = lsig1(W25, ZERO)
var bit32 second = lsig0(W12, ZERO)
var bit32 third = Add(W20, W11)
var bit32 fourth = Add(first, second)
var bit32 W27 = Add(third, fourth)
var bit32 first = lsig1(W26, ZERO)
var bit32 second = lsig0(W13, ZERO)
var bit32 third = Add(W21, W12)
var bit32 fourth = Add(first, second)
var bit32 W28 = Add(third, fourth)
var bit32 first = lsig1(W27, ZERO)
var bit32 second = lsig0(W14, ZERO)
var bit32 third = Add(W22, W13)
var bit32 fourth = Add(first, second)
var bit32 W29 = Add(third, fourth)
var bit32 first = lsig1(W28, ZERO)
var bit32 second = lsig0(W15, ZERO)
var bit32 third = Add(W23, W14)
var bit32 fourth = Add(first, second)
var bit32 W30 = Add(third, fourth)
var bit32 first = lsig1(W29, ZERO)
var bit32 second = lsig0(W16, ZERO)
var bit32 third = Add(W24, W15)
var bit32 fourth = Add(first, second)
var bit32 W31 = Add(third, fourth)
var bit32 first = lsig1(W30, ZERO)
var bit32 second = lsig0(W17, ZERO)
var bit32 third = Add(W25, W16)
var bit32 fourth = Add(first, second)
var bit32 W32 = Add(third, fourth)
var bit32 first = lsig1(W31, ZERO)
var bit32 second = lsig0(W18, ZERO)
var bit32 third = Add(W26, W17)
var bit32 fourth = Add(first, second)
var bit32 W33 = Add(third, fourth)
var bit32 first = lsig1(W32, ZERO)
var bit32 second = lsig0(W19, ZERO)
var bit32 third = Add(W27, W18)
var bit32 fourth = Add(first, second)
var bit32 W34 = Add(third, fourth)
var bit32 first = lsig1(W33, ZERO)
var bit32 second = lsig0(W20, ZERO)
var bit32 third = Add(W28, W19)
var bit32 fourth = Add(first, second)
var bit32 W35 = Add(third, fourth)
var bit32 first = lsig1(W34, ZERO)
var bit32 second = lsig0(W21, ZERO)
var bit32 third = Add(W29, W20)
var bit32 fourth = Add(first, second)
var bit32 W36 = Add(third, fourth)
var bit32 first = lsig1(W35, ZERO)
var bit32 second = lsig0(W22, ZERO)
var bit32 third = Add(W30, W21)
var bit32 fourth = Add(first, second)
var bit32 W37 = Add(third, fourth)
var bit32 first = lsig1(W36, ZERO)
var bit32 second = lsig0(W23, ZERO)
var bit32 third = Add(W31, W22)
var bit32 fourth = Add(first, second)
var bit32 W38 = Add(third, fourth)
var bit32 first = lsig1(W37, ZERO)
var bit32 second = lsig0(W24, ZERO)
var bit32 third = Add(W32, W23)
var bit32 fourth = Add(first, second)
var bit32 W39 = Add(third, fourth)
var bit32 first = lsig1(W38, ZERO)
var bit32 second = lsig0(W25, ZERO)
var bit32 third = Add(W33, W24)
var bit32 fourth = Add(first, second)
var bit32 W40 = Add(third, fourth)
var bit32 first = lsig1(W39, ZERO)
var bit32 second = lsig0(W26, ZERO)
var bit32 third = Add(W34, W25)
var bit32 fourth = Add(first, second)
var bit32 W41 = Add(third, fourth)
var bit32 first = lsig1(W40, ZERO)
var bit32 second = lsig0(W27, ZERO)
var bit32 third = Add(W35, W26)
var bit32 fourth = Add(first, second)
var bit32 W42 = Add(third, fourth)
var bit32 first = lsig1(W41, ZERO)
var bit32 second = lsig0(W28, ZERO)
var bit32 third = Add(W36, W27)
var bit32 fourth = Add(first, second)
var bit32 W43 = Add(third, fourth)
var bit32 first = lsig1(W42, ZERO)
var bit32 second = lsig0(W29, ZERO)
var bit32 third = Add(W37, W28)
var bit32 fourth = Add(first, second)
var bit32 W44 = Add(third, fourth)
var bit32 first = lsig1(W43, ZERO)
var bit32 second = lsig0(W30, ZERO)
var bit32 third = Add(W38, W29)
var bit32 fourth = Add(first, second)
var bit32 W45 = Add(third, fourth)
var bit32 first = lsig1(W44, ZERO)
var bit32 second = lsig0(W31, ZERO)
var bit32 third = Add(W39, W30)
var bit32 fourth = Add(first, second)
var bit32 W46 = Add(third, fourth)
var bit32 first = lsig1(W45, ZERO)
var bit32 second = lsig0(W32, ZERO)
var bit32 third = Add(W40, W31)
var bit32 fourth = Add(first, second)
var bit32 W47 = Add(third, fourth)
var bit32 first = lsig1(W46, ZERO)
var bit32 second = lsig0(W33, ZERO)
var bit32 third = Add(W41, W32)
var bit32 fourth = Add(first, second)
var bit32 W48 = Add(third, fourth)
var bit32 first = lsig1(W47, ZERO)
var bit32 second = lsig0(W34, ZERO)
var bit32 third = Add(W42, W33)
var bit32 fourth = Add(first, second)
var bit32 W49 = Add(third, fourth)
var bit32 first = lsig1(W48, ZERO)
var bit32 second = lsig0(W35, ZERO)
var bit32 third = Add(W43, W34)
var bit32 fourth = Add(first, second)
var bit32 W50 = Add(third, fourth)
var bit32 first = lsig1(W49, ZERO)
var bit32 second = lsig0(W36, ZERO)
var bit32 third = Add(W44, W35)
var bit32 fourth = Add(first, second)
var bit32 W51 = Add(third, fourth)
var bit32 first = lsig1(W50, ZERO)
var bit32 second = lsig0(W37, ZERO)
var bit32 third = Add(W45, W36)
var bit32 fourth = Add(first, second)
var bit32 W52 = Add(third, fourth)
var bit32 first = lsig1(W51, ZERO)
var bit32 second = lsig0(W38, ZERO)
var bit32 third = Add(W46, W37)
var bit32 fourth = Add(first, second)
var bit32 W53 = Add(third, fourth)
var bit32 first = lsig1(W52, ZERO)
var bit32 second = lsig0(W39, ZERO)
var bit32 third = Add(W47, W38)
var bit32 fourth = Add(first, second)
var bit32 W54 = Add(third, fourth)
var bit32 first = lsig1(W53, ZERO)
var bit32 second = lsig0(W40, ZERO)
var bit32 third = Add(W48, W39)
var bit32 fourth = Add(first, second)
var bit32 W55 = Add(third, fourth)
var bit32 first = lsig1(W54, ZERO)
var bit32 second = lsig0(W41, ZERO)
var bit32 third = Add(W49, W40)
var bit32 fourth = Add(first, second)
var bit32 W56 = Add(third, fourth)
var bit32 first = lsig1(W55, ZERO)
var bit32 second = lsig0(W42, ZERO)
var bit32 third = Add(W50, W41)
var bit32 fourth = Add(first, second)
var bit32 W57 = Add(third, fourth)
var bit32 first = lsig1(W56, ZERO)
var bit32 second = lsig0(W43, ZERO)
var bit32 third = Add(W51, W42)
var bit32 fourth = Add(first, second)
var bit32 W58 = Add(third, fourth)
var bit32 first = lsig1(W57, ZERO)
var bit32 second = lsig0(W44, ZERO)
var bit32 third = Add(W52, W43)
var bit32 fourth = Add(first, second)
var bit32 W59 = Add(third, fourth)
var bit32 first = lsig1(W58, ZERO)
var bit32 second = lsig0(W45, ZERO)
var bit32 third = Add(W53, W44)
var bit32 fourth = Add(first, second)
var bit32 W60 = Add(third, fourth)
var bit32 first = lsig1(W59, ZERO)
var bit32 second = lsig0(W46, ZERO)
var bit32 third = Add(W54, W45)
var bit32 fourth = Add(first, second)
var bit32 W61 = Add(third, fourth)
var bit32 first = lsig1(W60, ZERO)
var bit32 second = lsig0(W47, ZERO)
var bit32 third = Add(W55, W46)
var bit32 fourth = Add(first, second)
var bit32 W62 = Add(third, fourth)
var bit32 first = lsig1(W61, ZERO)
var bit32 second = lsig0(W48, ZERO)
var bit32 third = Add(W56, W47)
var bit32 fourth = Add(first, second)
var bit32 W63 = Add(third, fourth)
var bit32 a_old = a[0:32]
var bit32 b_old = b[0:32]
var bit32 c_old = c[0:32]
var bit32 d_old = d[0:32]
var bit32 e_old = e[0:32]
var bit32 f_old = f[0:32]
var bit32 g_old = g[0:32]
var bit32 h_old = h[0:32]
loop(64)
{
    var bit32 k = K[*32]
    var bit32 w = W*
    var bit32 s0 = Add(k,w)
    var bit32 s1 = bsig1(e)
    var bit32 s2 = Ch(e,f,g,ONE)
    var bit32 s3 = Add(s1,s2)
    var bit32 s4 = Add(s0, h)
    var bit32 T1 = Add(s3,s4)
    var bit32 s0 = bsig0(a)
    var bit32 s1 = Maj(a,b,c)
    var bit32 T2 = Add(s0,s1)
    var bit32 h = g[0:32]
    var bit32 g = f[0:32]
    var bit32 f = e[0:32]
    var bit32 e = Add(d,T1)
    var bit32 d = c[0:32]
    var bit32 c = b[0:32]
    var bit32 b = a[0:32]
    var bit32 a = Add(T1, T2)
}
var bit32 a = Add(a, a_old)
var bit32 b = Add(b, b_old)
var bit32 c = Add(c, c_old)
var bit32 d = Add(d, d_old)
var bit32 e = Add(e, e_old)
var bit32 f = Add(f, f_old)
var bit32 g = Add(g, g_old)
var bit32 h = Add(h, h_old)
var bit32 a = move(a)
var bit32 b = move(b)
var bit32 c = move(c)
var bit32 d = move(d)
var bit32 e = move(e)
var bit32 f = move(f)
var bit32 g = move(g)
var bit32 h = move(h)
out 256